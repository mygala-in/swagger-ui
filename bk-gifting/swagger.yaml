openapi: 3.0.0
info:
  version: 2.1.0
  title: bk-gifting
tags:
  - name: gifting
    description: gifting service apis
servers:
  - url: https://dev-api.mygala.in
    description: dev
  - url: https://api.mygala.in
    description: prod
  - url: http://localhost:3000
    description: localhost
components:
  securitySchemes:
    Bearer:
      type: apiKey
      name: Authorization
      in: header
  parameters:
    page:
      in: query
      name: page
      schema:
        type: number
    query:
      in: query
      name: q
      schema:
        type: string
      required: true
    weddingId:
      in: path
      description: unique id of the wedding
      name: weddingId
      schema:
        type: string
      required: true
    eventId:
      in: path
      description: unique id of the event
      name: eventId
      schema:
        type: string
      required: true
    id:
      in: path
      description: unique id
      name: id
      schema:
        type: string
      required: true
    userId:
      in: path
      description: the id can be email, username or phone
      name: userId
      schema:
        type: string
      required: true
    entity:
      in: path
      description: all, wedding, user etc; individual search components
      name: entity
      schema:
        type: string
      required: true
    qUserId:
      in: query
      description: the id of an user
      name: userId
      schema:
        type: string
      required: true
    streamId:
      in: path
      description: unique id of the video stream
      name: streamId
      schema:
        type: string
      required: true
    chatId:
      in: path
      description: unique id of a chat conversation
      name: chatId
      schema:
        type: string
      required: true
    app:
      in: query
      description: app from which the request is being sent
      name: app
      schema:
        type: string
        enum:
          - user
          - vendor
      required: true
    details:
      in: query
      description: if the full details is required or not
      name: details
      schema:
        type: boolean
        default: false
      required: true
    include:
      in: query
      description: extra includes based on requirement
      name: include
      schema:
        type: string
      required: false
    platform:
      in: header
      name: platform
      schema:
        type: string
        enum:
          - android
          - web
          - ios
      required: true
    appversion:
      in: header
      description: build number of the app
      name: appversion
      schema:
        type: integer
        default: 1
      required: true
    vendorId:
      in: path
      description: unique id of the vendor
      name: vendorId
      schema:
        type: integer
      required: true
    packageId:
      in: path
      description: unique id of a vendor package
      name: packageId
      schema:
        type: integer
      required: true
    locationId:
      in: path
      description: unique id of the location
      name: locationId
      schema:
        type: integer
      required: true
    commentId:
      in: path
      description: unique id of the comment
      name: commentId
      schema:
        type: integer
      required: true
    occasion:
      in: query
      name: occasion
      description: The occasion for which recommendations are requested.
      schema:
        type: string
        enum:
          - Birthday
          - Wedding
          - Engagement
          - HouseWarming
          - CorporateEvents
          - BabyShower
          - NamingCeremony
          - BachelorParty
          - Anniversary
      required: true
    wishlistId:
      in: path
      description: unique id of the wishlist
      name: wishlistId
      schema:
        type: string
      required: true
    parentId:
      in: query
      description: wishlist for requested parentId
      name: parentId
      schema:
        type: string
      required: true
  schemas:
    new-wishlist:
      type: object
      properties:
        items:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                description: Name of the wishlist item
              parentId:
                type: string
                description: Identifier for the parent entity
              url:
                type: string
                description: URL associated with the wishlist item
              price:
                type: string
                description: Price of the wishlist item
              needed:
                type: boolean
                description: Indicates if the item is needed
              groupBy:
                type: string
                description: Character used for grouping items (e.g., 'G' for group)
              quantity:
                type: number
                description: Quantity of the wishlist item
            required:
              - parentId
              - url
      required:
        - items
    update-wishlist:
      properties:
        name:
          type: string
        url:
          type: string
        price:
          type: string
        needed:
          type: boolean
        groupBy:
          type: string
        quantity:
          type: number
paths:
  /gifting/v1/wishlist/recommendations:
    get:
      summary: Get recommendations for the user's wishlist based on the occasion
      tags:
        - gifting
      security:
        - Bearer: []
      parameters:
        - $ref: '#/components/parameters/occasion'
        - $ref: '#/components/parameters/platform'
        - $ref: '#/components/parameters/appversion'
      responses:
        '200':
          description: success
  /gifting/v1/wishlist/new:
    post:
      summary: Create a new wishlist
      tags:
        - gifting
      security:
        - Bearer: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/new-wishlist'
      parameters:
        - $ref: '#/components/parameters/platform'
        - $ref: '#/components/parameters/appversion'
      responses:
        '200':
          description: Wishlist successfully created
  /gifting/v1/wishlist/{wishlistId}:
    get:
      summary: get wishlist by id
      tags:
        - gifting
      security:
        - Bearer: []
      parameters:
        - $ref: '#/components/parameters/wishlistId'
        - $ref: '#/components/parameters/platform'
        - $ref: '#/components/parameters/appversion'
      responses:
        '200':
          description: success
    patch:
      summary: update wishlist by id
      tags:
        - gifting
      security:
        - Bearer: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/update-wishlist'
      parameters:
        - $ref: '#/components/parameters/wishlistId'
        - $ref: '#/components/parameters/platform'
        - $ref: '#/components/parameters/appversion'
      responses:
        '200':
          description: success
    delete:
      summary: delete wishlist by id
      tags:
        - gifting
      security:
        - Bearer: []
      parameters:
        - $ref: '#/components/parameters/wishlistId'
        - $ref: '#/components/parameters/platform'
        - $ref: '#/components/parameters/appversion'
      responses:
        '200':
          description: success
  /gifting/v1/wishlist/list:
    get:
      summary: Get wishlist based on parentId
      tags:
        - gifting
      security:
        - Bearer: []
      parameters:
        - $ref: '#/components/parameters/parentId'
        - $ref: '#/components/parameters/platform'
        - $ref: '#/components/parameters/appversion'
      responses:
        '200':
          description: success
