openapi: 3.0.0
info:
  version: 2.1.0
  title: bk-post
tags:
  - name: post
    description: post service apis
servers:
  - url: https://dev-api.mygala.in
    description: dev
  - url: https://api.mygala.in
    description: prod
  - url: http://localhost:3000
    description: localhost
components:
  securitySchemes:
    Bearer:
      type: apiKey
      name: Authorization
      in: header
  parameters:
    page:
      in: query
      name: page
      schema:
        type: number
    query:
      in: query
      name: q
      schema:
        type: string
      required: true
    weddingId:
      in: path
      description: unique id of the wedding
      name: weddingId
      schema:
        type: string
      required: true
    occasionId:
      in: path
      description: unique id of the wedding
      name: occasionId
      schema:
        type: string
      required: true
    parentId:
      in: path
      description: unique id of a parent
      name: parentId
      schema:
        type: string
      required: true
    eventId:
      in: path
      description: unique id of the event
      name: eventId
      schema:
        type: string
      required: true
    id:
      in: path
      description: unique id
      name: id
      schema:
        type: string
      required: true
    userId:
      in: path
      description: the id can be email, username or phone
      name: userId
      schema:
        type: string
      required: true
    entity:
      in: path
      description: all, wedding, user etc; individual search components
      name: entity
      schema:
        type: string
      required: true
    qUserId:
      in: query
      description: the id of an user
      name: userId
      schema:
        type: string
      required: true
    streamId:
      in: path
      description: unique id of the video stream
      name: streamId
      schema:
        type: string
      required: true
    chatId:
      in: path
      description: unique id of a chat conversation
      name: chatId
      schema:
        type: string
      required: true
    app:
      in: query
      description: app from which the request is being sent
      name: app
      schema:
        type: string
        enum:
          - user
          - vendor
      required: true
    details:
      in: query
      description: if the full details is required or not
      name: details
      schema:
        type: boolean
        default: false
      required: true
    include:
      in: query
      description: extra includes based on requirement
      name: include
      schema:
        type: string
      required: false
    platform:
      in: header
      name: platform
      schema:
        type: string
        enum:
          - android
          - web
          - ios
      required: true
    appversion:
      in: header
      description: build number of the app
      name: appversion
      schema:
        type: integer
        default: 1
      required: true
    vendorId:
      in: path
      description: unique id of the vendor
      name: vendorId
      schema:
        type: integer
      required: true
    packageId:
      in: path
      description: unique id of a vendor package
      name: packageId
      schema:
        type: integer
      required: true
    locationId:
      in: path
      description: unique id of the location
      name: locationId
      schema:
        type: integer
      required: true
    commentId:
      in: path
      description: unique id of the comment
      name: commentId
      schema:
        type: integer
      required: true
    occasion:
      in: query
      name: occasion
      description: The occasion for which recommendations are requested.
      schema:
        type: string
        enum:
          - Birthday
          - Wedding
          - Engagement
          - HouseWarming
          - CorporateEvents
          - BabyShower
          - NamingCeremony
          - BachelorParty
          - Anniversary
      required: true
    wishlistId:
      in: path
      description: unique id of the wishlist
      name: wishlistId
      schema:
        type: string
      required: true
  schemas:
    new-post:
      properties:
        type:
          type: string
          description: type of post to be created
        parentId:
          type: string
        status:
          type: string
          enum:
            - P
            - A
            - B
        text:
          type: string
    update-post:
      properties:
        status:
          type: string
        text:
          type: string
    comment:
      properties:
        text:
          type: string
paths:
  /post/v1/list:
    get:
      summary: get user posts
      tags:
        - post
      security:
        - Bearer: []
      parameters:
        - in: query
          name: postId
          required: true
          schema:
            type: number
        - in: query
          name: action
          required: true
          schema:
            type: string
            enum:
              - after
              - before
        - in: query
          name: size
          required: true
          schema:
            type: number
        - $ref: '#/components/parameters/platform'
        - $ref: '#/components/parameters/appversion'
      responses:
        '200':
          description: success
  /post/v1/{parentId}/list:
    get:
      summary: get occasion posts
      tags:
        - post
      security:
        - Bearer: []
      parameters:
        - in: query
          name: action
          required: true
          schema:
            type: string
            enum:
              - after
              - before
        - in: query
          name: postId
          schema:
            type: number
        - in: query
          name: size
          required: true
          schema:
            type: number
        - $ref: '#/components/parameters/parentId'
        - $ref: '#/components/parameters/platform'
        - $ref: '#/components/parameters/appversion'
      responses:
        '200':
          description: success
  /post/v1/new:
    post:
      summary: create new post
      tags:
        - post
      security:
        - Bearer: []
      parameters:
        - $ref: '#/components/parameters/platform'
        - $ref: '#/components/parameters/appversion'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/new-post'
      responses:
        '200':
          description: success
  /post/v1/{id}:
    get:
      summary: get a post
      tags:
        - post
      security:
        - Bearer: []
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/platform'
        - $ref: '#/components/parameters/appversion'
      responses:
        '200':
          description: success
    put:
      summary: update post details
      tags:
        - post
      security:
        - Bearer: []
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/platform'
        - $ref: '#/components/parameters/appversion'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/update-post'
      responses:
        '200':
          description: success
    delete:
      summary: delete a post
      tags:
        - post
      security:
        - Bearer: []
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/platform'
        - $ref: '#/components/parameters/appversion'
      responses:
        '200':
          description: success
  /post/v1/{parentId}/like:
    put:
      summary: like action on parentId
      tags:
        - post
      security:
        - Bearer: []
      parameters:
        - $ref: '#/components/parameters/parentId'
        - $ref: '#/components/parameters/platform'
        - $ref: '#/components/parameters/appversion'
      responses:
        '200':
          description: api successful
  /post/v1/{id}/like:
    delete:
      summary: unlike action on id
      tags:
        - post
      security:
        - Bearer: []
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/platform'
        - $ref: '#/components/parameters/appversion'
      responses:
        '200':
          description: api successful
  /post/v1/{parentId}/comment:
    post:
      summary: new comment action on parentId
      tags:
        - post
      security:
        - Bearer: []
      parameters:
        - $ref: '#/components/parameters/parentId'
        - $ref: '#/components/parameters/platform'
        - $ref: '#/components/parameters/appversion'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/comment'
      responses:
        '200':
          description: api successful
  /post/v1/{id}/comment:
    put:
      summary: edit comment action on id
      tags:
        - post
      security:
        - Bearer: []
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/platform'
        - $ref: '#/components/parameters/appversion'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/comment'
      responses:
        '200':
          description: api successful
    delete:
      summary: uncomment action on id
      tags:
        - post
      security:
        - Bearer: []
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/platform'
        - $ref: '#/components/parameters/appversion'
      responses:
        '200':
          description: api successful
  /post/v1/{parentId}/likes:
    get:
      summary: paginated list of likes for a parent
      tags:
        - post
      security:
        - Bearer: []
      parameters:
        - $ref: '#/components/parameters/parentId'
        - in: query
          name: page
          schema:
            type: number
        - in: query
          name: size
          schema:
            type: number
        - $ref: '#/components/parameters/platform'
        - $ref: '#/components/parameters/appversion'
      responses:
        '200':
          description: api successful
  /post/v1/{parentId}/comments:
    get:
      summary: paginated list of comments for a parent
      tags:
        - post
      security:
        - Bearer: []
      parameters:
        - $ref: '#/components/parameters/parentId'
        - in: query
          name: page
          schema:
            type: number
        - in: query
          name: size
          schema:
            type: number
        - $ref: '#/components/parameters/platform'
        - $ref: '#/components/parameters/appversion'
      responses:
        '200':
          description: api successful
  /post/v1/{parentId}/list:
    get:
      summary: get occasion posts
      tags:
        - post
      parameters:
        - $ref: '#/components/parameters/parentId'
        - $ref: '#/components/parameters/platform'
        - $ref: '#/components/parameters/appversion'
      responses:
        '200':
          description: success
