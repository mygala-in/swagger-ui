openapi: 3.0.0
info:
  version: 2.1.0
  title: MyGala
  description: Backend APIs documentation for MyGala
tags:
  - name: occasion
    description: occasion & event service apis
  - name: post
    description: post service apis
  - name: vendor
    description: vendor service apis
  - name: notification
    description: notification service apis
  - name: general
    description: General public apis
  - name: profile
    description: profile service apis
  - name: chat
    description: individual & group chat apis
  - name: asset
    description: asset service apis
  - name: location
    description: location service apis
  - name: gifting
    description: gifting service apis

servers:
  - url: https://dev-api.mygala.in
    description: dev
  - url: https://api.mygala.in
    description: prod
  - url: http://localhost:3000
    description: localhost
components:
  securitySchemes:
    Bearer:
      type: apiKey
      name: Authorization
      in: header
  parameters:
    page:
      in: query
      name: page
      schema:
        type: number
    query:
      in: query
      name: q
      schema:
        type: string
      required: true
    status:
      in: query
      name: status
      description: The status for rsvp.
      schema:
        type: string
        enum:
          - Y
          - N
          - M
      required: true
    occasionId:
      in: path
      description: unique id of the occasion
      name: occasionId
      schema:
        type: string
      required: true
    parentId:
      in: path
      description: unique id of a parent
      name: parentId
      schema:
        type: string
      required: true
    eventId:
      in: path
      description: unique id of the event
      name: eventId
      schema:
        type: string
      required: true
    id:
      in: path
      description: unique id
      name: id
      schema:
        type: string
      required: true
    userId:
      in: path
      description: the id can be email, username or phone
      name: userId
      schema:
        type: string
      required: true
    entity:
      in: path
      description: all, occasion, user etc; individual search components
      name: entity
      schema:
        type: string
      required: true
    qUserId:
      in: query
      description: the id of an user
      name: userId
      schema:
        type: string
      required: true
    streamId:
      in: path
      description: unique id of the video stream
      name: streamId
      schema:
        type: string
      required: true
    chatId:
      in: path
      description: unique id of a chat conversation
      name: chatId
      schema:
        type: string
      required: true
    app:
      in: query
      description: app from which the request is being sent
      name: app
      schema:
        type: string
        enum:
          - user
          - vendor
      required: true
    details:
      in: query
      description: if the full details is required or not
      name: details
      schema:
        type: boolean
        default: false
      required: true
    include:
      in: query
      description: extra includes based on requirement
      name: include
      schema:
        type: string
      required: false
    platform:
      in: header
      name: platform
      schema:
        type: string
        enum:
          - android
          - web
          - ios
      required: true
    appversion:
      in: header
      description: build number of the app
      name: appversion
      schema:
        type: integer
        default: 1
      required: true
    vendorId:
      in: path
      description: unique id of the vendor
      name: vendorId
      schema:
        type: integer
      required: true
    packageId:
      in: path
      description: unique id of a vendor package
      name: packageId
      schema:
        type: integer
      required: true
    locationId:
      in: path
      description: unique id of the location
      name: locationId
      schema:
        type: integer
      required: true
    commentId:
      in: path
      description: unique id of the comment
      name: commentId
      schema:
        type: integer
      required: true
    occasion:
      in: query
      name: occasion
      description: The occasion for which recommendations are requested.
      schema:
        type: string
        enum:
          - Birthday
          - Wedding
          - Engagement
          - HouseWarming
          - CorporateEvents
          - BabyShower
          - NamingCeremony
          - BachelorParty
          - Anniversary
      required: true
    wishlistId:
      in: path
      description: unique id of the wishlist
      name: wishlistId
      schema:
        type: string
      required: true
  schemas:
    new-enquiry:
      properties:
        name:
          type: string
        phone:
          type: string
        location:
          type: string
        schedule:
          type: string
        services:
          type: string
        price:
          type: string
        source:
          type: string
    new-occasion:
      properties:
        title:
          type: string
        note:
          type: string
        fromTime:
          type: number
        type:
          type: string
        url:
          type: string
        locationId:
          type: number
    update-occasion:
      properties:
        title:
          type: string
        note:
          type: string
        code:
          type: string
        url:
          type: string
        type:
          type: string
        fromTime:
          type: number
        tillTime:
          type: number
        locationId:
          type: integer
        extras:
          type: object
        isPublic:
          type: boolean
    delete-occasion:
      properties:
        code:
          type: string
    occasion-event:
      properties:
        name:
          type: string
        description:
          type: string
        fromTime:
          type: number
        tillTime:
          type: number
    new-asset:
      properties:
        resourceType:
          type: number
        assetType:
          type: string
        url:
          type: string
        eventId:
          type: number
        occasionId:
          type: number
        chatId:
          type: number
        fromTime:
          type: number
        tillTime:
          type: number
    new-post:
      properties:
        type:
          type: string
          description: type of post to be created
        parentId:
          type: string
        status:
          type: string
          enum:
            - P
            - A
            - B
        text:
          type: string
    update-post:
      properties:
        status:
          type: string
        text:
          type: string
    chat-message:
      properties:
        val:
          type: string
        at:
          type: number
        type:
          type: string
        users:
          type: array
          items:
            type: number
    signin:
      properties:
        tokenId:
          description: >-
            the google tokenId received after successful login, usually valid
            for 1hour
          type: string
        uid:
          description: firebase uid of the user
          type: string
        type:
          description: google, apple, phone
          type: string
    signin-resp:
      properties:
        accesstoken:
          description: jwt token encoded with user details such as email, uid, etc.
          type: string
        expiryMillis:
          description: expiry time of accesstoken in epoch milli seconds
          type: number
        isSignUp:
          description: true for first time users, false otherwise
          type: boolean
    profile-settings:
      properties:
        notifications:
          type: object
          properties:
            connRequest:
              type: boolean
            message:
              type: boolean
            likes:
              type: boolean
            comments:
              type: boolean
            commentLikes:
              type: boolean
    profile-update:
      properties:
        name:
          type: string
        username:
          type: string
        bio:
          type: string
        dob:
          description: YYYY-MM-DD format
          type: string
        phone:
          type: string
        gender:
          type: string
        maritial:
          type: string
        lat:
          type: number
        lon:
          type: number
        city:
          type: string
        country:
          type: string
        pincode:
          type: string
        instagram:
          type: string
        facebook:
          type: string
    update-chat:
      properties:
        isGroup:
          type: boolean
        users:
          type: array
          items:
            type: number
        name:
          type: string
        url:
          type: string
    comment:
      properties:
        text:
          type: string
    new-vendor:
      type: object
      properties:
        category: {}
        subCategory: {}
    default:
      type: object
    update-vendor:
      properties:
        category:
          type: string
        subCategory:
          type: string
        title:
          type: string
        photo:
          type: string
        description:
          type: string
        contact:
          type: object
        social:
          type: object
        features:
          type: array
          items:
            type: object
        packages:
          type: array
          items:
            type: object
    new-wishlist:
      type: object
      properties:
        items:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                description: Name of the wishlist item
              parentId:
                type: string
                description: Identifier for the parent entity
              url:
                type: string
                description: URL associated with the wishlist item
              price:
                type: string
                description: Price of the wishlist item
              needed:
                type: boolean
                description: Indicates if the item is needed
              groupBy:
                type: string
                description: Character used for grouping items (e.g., 'G' for group)
              quantity:
                type: number
                description: Quantity of the wishlist item
            required:
              - parentId
              - url
    update-wishlist:
      properties:
        name:
          type: string
        url:
          type: string
        price:
          type: string
        needed:
          type: boolean
        groupBy:
          type: string
        quantity:
          type: number
paths:
  /general/v1/swagger:
    get:
      summary: gets the swagger config
      description: >-
        The swagger config api is not allowed on prod environment, it will work
        only on dev & stage environments. fetches & returns swagger config json
        from bk-utils
      tags:
        - general
      responses:
        '200':
          description: api successful
  /general/v1/config:
    get:
      summary: gets the app config
      tags:
        - general
      parameters:
        - in: query
          name: type
          schema:
            type: string
            enum:
              - web
              - app
              - vendor
          required: false
      responses:
        '200':
          description: api successful
  /general/v1/dial-codes:
    get:
      summary: get allowed country dial codes
      tags:
        - general
      responses:
        '200':
          description: api successful
  /general/v1/vendor-categories:
    get:
      summary: get allowed vendor categories
      tags:
        - general
      responses:
        '200':
          description: api successful
  /general/v1/search/{entity}:
    get:
      summary: global search; includes mini profiles & active occasions
      tags:
        - general
      security:
        - Bearer: []
      parameters:
        - $ref: '#/components/parameters/entity'
        - $ref: '#/components/parameters/query'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/platform'
        - $ref: '#/components/parameters/appversion'
      responses:
        '200':
          description: success
  /general/v1/enquiry:
    post:
      summary: Create a new general enquiry
      tags:
        - general
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/new-enquiry'
      responses:
        '200':
          description: Enquiry successfully created
  /general/v1/feedback/new:
    post:
      summary: save new feedback
      tags:
        - general
      parameters:
        - $ref: '#/components/parameters/platform'
        - $ref: '#/components/parameters/appversion'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/default'
      responses:
        '200':
          description: feedback saved successfully
  /general/v1/report/new:
    post:
      summary: save new report
      tags:
        - general
      security:
        - Bearer: []
      parameters:
        - $ref: '#/components/parameters/platform'
        - $ref: '#/components/parameters/appversion'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/default'
      responses:
        '200':
          description: report saved successfully
  /profile/v1/signin/{provider}:
    put:
      summary: used for google signin, apple signin and phone signin
      description: >-
        The same API will be used for google signin & signup. Returns
        accesstoken, expiryMillis & isSignUp boolean values. isSignUp boolean is
        used to determine whether the user follows signin flow or signup flow.
      tags:
        - profile
      parameters:
        - in: path
          name: provider
          required: true
          schema:
            type: string
            enum:
              - phone
              - google
              - apple
        - $ref: '#/components/parameters/platform'
        - $ref: '#/components/parameters/appversion'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/signin'
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/signin-resp'
  /profile/v1/username:
    head:
      summary: to check username availability
      description: >-
        The API to check whether a particular username is available or not.
        returns 200 status code if available, else 4** error codes will be
        returned.
      tags:
        - profile
      parameters:
        - $ref: '#/components/parameters/query'
        - $ref: '#/components/parameters/platform'
        - $ref: '#/components/parameters/appversion'
      responses:
        '200':
          description: username available
        '403':
          description: username taken
  /profile/v1/{userId}:
    put:
      summary: to update the user profile details
      description: >-
        To update the profile fields of the current user. the fields should not
        relate to profile settings.
      tags:
        - profile
      security:
        - Bearer: []
      parameters:
        - $ref: '#/components/parameters/userId'
        - $ref: '#/components/parameters/platform'
        - $ref: '#/components/parameters/appversion'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/profile-update'
      responses:
        '200':
          description: success
    get:
      summary: fetch full profile of the user
      description: >-
        Fetches the full user profile details based on the excat match of the
        id. the ID may belong to the current user, or user with public profile,
        or user in connections list, will always result single user.
      tags:
        - profile
      security:
        - Bearer: []
      parameters:
        - $ref: '#/components/parameters/userId'
        - $ref: '#/components/parameters/include'
        - $ref: '#/components/parameters/platform'
        - $ref: '#/components/parameters/appversion'
      responses:
        '200':
          description: success
    delete:
      summary: mark profile for deletion
      tags:
        - profile
      security:
        - Bearer: []
      parameters:
        - $ref: '#/components/parameters/userId'
        - $ref: '#/components/parameters/include'
        - $ref: '#/components/parameters/platform'
        - $ref: '#/components/parameters/appversion'
      responses:
        '200':
          description: success
  /profile/v1/settings:
    put:
      summary: to update the user profile settings
      description: >-
        To update the profile setttings of the current user. used to manage
        notifications, emails etc. and other user preferences.
      tags:
        - profile
      security:
        - Bearer: []
      parameters:
        - $ref: '#/components/parameters/platform'
        - $ref: '#/components/parameters/appversion'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/profile-settings'
      responses:
        '200':
          description: success
    get:
      summary: to fetch the user profile settings
      description: >-
        To fetch the profile settings of the current user. settings includes
        configs to manage notifications, emails, and other user preferences.
      tags:
        - profile
      security:
        - Bearer: []
      parameters:
        - $ref: '#/components/parameters/platform'
        - $ref: '#/components/parameters/appversion'
      responses:
        '200':
          description: success
  /profile/v1/search:
    get:
      summary: to fetch mini profiles of matching users
      description: >-
        To fetch mini profiles of matching users. Fizzy search will be made &
        results may contain multiple users, with pagination
      tags:
        - profile
      security:
        - Bearer: []
      parameters:
        - $ref: '#/components/parameters/query'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/platform'
        - $ref: '#/components/parameters/appversion'
      responses:
        '200':
          description: success
  /profile/v1/notifications:
    get:
      summary: list of notitication topics for the requested user
      tags:
        - profile
      security:
        - Bearer: []
      parameters:
        - $ref: '#/components/parameters/platform'
        - $ref: '#/components/parameters/appversion'
      responses:
        '200':
          description: success
  /profile/v1/{userId}/assets:
    get:
      summary: to fetch the user profile images of the id
      description: >-
        To fetch all the images of an user based on the id. the ID may belong to
        the current user, or user with public profile, or user in connections
        list.
      tags:
        - profile
      security:
        - Bearer: []
      parameters:
        - $ref: '#/components/parameters/userId'
        - $ref: '#/components/parameters/platform'
        - $ref: '#/components/parameters/appversion'
      responses:
        '200':
          description: success
  /asset/v1/new:
    post:
      summary: create new asset & return signed url
      tags:
        - asset
      security:
        - Bearer: []
      parameters:
        - $ref: '#/components/parameters/platform'
        - $ref: '#/components/parameters/appversion'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/new-asset'
      responses:
        '200':
          description: success
  /asset/v1/{assetId}:
    delete:
      summary: delete asset by id
      tags:
        - asset
      security:
        - Bearer: []
      parameters:
        - in: path
          name: assetId
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/platform'
        - $ref: '#/components/parameters/appversion'
      responses:
        '200':
          description: success
    get:
      summary: get asset by id
      tags:
        - asset
      security:
        - Bearer: []
      parameters:
        - in: path
          name: assetId
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/platform'
        - $ref: '#/components/parameters/appversion'
      responses:
        '200':
          description: success
    put:
      summary: update asset by id
      tags:
        - asset
      security:
        - Bearer: []
      parameters:
        - in: path
          name: assetId
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/platform'
        - $ref: '#/components/parameters/appversion'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/new-asset'
      responses:
        '200':
          description: success
  /chat/v1/list:
    get:
      summary: >-
        to get list of individual & group chats which are in accepted or pending
        states
      tags:
        - chat
      security:
        - Bearer: []
      parameters:
        - $ref: '#/components/parameters/platform'
        - $ref: '#/components/parameters/appversion'
      responses:
        '200':
          description: success
  /chat/v1/new:
    post:
      summary: to create an individual or group chat
      tags:
        - chat
      security:
        - Bearer: []
      parameters:
        - $ref: '#/components/parameters/platform'
        - $ref: '#/components/parameters/appversion'
      responses:
        '200':
          description: success
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/update-chat'
  /chat/v1/{chatId}:
    get:
      summary: get chat users
      tags:
        - chat
      security:
        - Bearer: []
      parameters:
        - $ref: '#/components/parameters/chatId'
        - $ref: '#/components/parameters/platform'
        - $ref: '#/components/parameters/appversion'
      responses:
        '200':
          description: success
    put:
      summary: update chat users, name & url
      tags:
        - chat
      security:
        - Bearer: []
      parameters:
        - $ref: '#/components/parameters/chatId'
        - $ref: '#/components/parameters/platform'
        - $ref: '#/components/parameters/appversion'
      responses:
        '200':
          description: success
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/update-chat'
  /chat/v1/{chatId}/accept:
    put:
      summary: to accept chat request
      tags:
        - chat
      security:
        - Bearer: []
      parameters:
        - $ref: '#/components/parameters/platform'
        - $ref: '#/components/parameters/appversion'
        - $ref: '#/components/parameters/chatId'
      responses:
        '200':
          description: success
  /chat/v1/{chatId}/exit:
    delete:
      summary: to exit & reject chat
      tags:
        - chat
      security:
        - Bearer: []
      parameters:
        - $ref: '#/components/parameters/platform'
        - $ref: '#/components/parameters/appversion'
        - $ref: '#/components/parameters/chatId'
        - $ref: '#/components/parameters/qUserId'
      responses:
        '200':
          description: success
  /chat/v1/{chatId}/admin:
    put:
      summary: make user as admin
      tags:
        - chat
      security:
        - Bearer: []
      parameters:
        - $ref: '#/components/parameters/platform'
        - $ref: '#/components/parameters/appversion'
        - $ref: '#/components/parameters/chatId'
        - $ref: '#/components/parameters/qUserId'
      responses:
        '200':
          description: success
    delete:
      summary: make user as non-admin
      tags:
        - chat
      security:
        - Bearer: []
      parameters:
        - $ref: '#/components/parameters/platform'
        - $ref: '#/components/parameters/appversion'
        - $ref: '#/components/parameters/chatId'
        - $ref: '#/components/parameters/qUserId'
      responses:
        '200':
          description: success
  /chat/v1/{chatId}/recent:
    put:
      summary: update recent chat message
      tags:
        - chat
      security:
        - Bearer: []
      parameters:
        - $ref: '#/components/parameters/platform'
        - $ref: '#/components/parameters/appversion'
        - $ref: '#/components/parameters/chatId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/chat-message'
      responses:
        '200':
          description: success
  /post/v1/list:
    get:
      summary: get user posts
      tags:
        - post
      security:
        - Bearer: []
      parameters:
        - in: query
          name: postId
          required: true
          schema:
            type: number
        - in: query
          name: action
          required: true
          schema:
            type: string
            enum:
              - after
              - before
        - in: query
          name: size
          required: true
          schema:
            type: number
        - $ref: '#/components/parameters/platform'
        - $ref: '#/components/parameters/appversion'
      responses:
        '200':
          description: success
  /post/v1/occasion/{occasionId}/list:
    get:
      summary: get occasion posts
      tags:
        - post
      security:
        - Bearer: []
      parameters:
        - in: query
          name: action
          required: true
          schema:
            type: string
            enum:
              - after
              - before
        - in: query
          name: postId
          schema:
            type: number
        - in: query
          name: size
          required: true
          schema:
            type: number
        - $ref: '#/components/parameters/occasionId'
        - $ref: '#/components/parameters/platform'
        - $ref: '#/components/parameters/appversion'
      responses:
        '200':
          description: success
  /post/v1/new:
    post:
      summary: create new post
      tags:
        - post
      security:
        - Bearer: []
      parameters:
        - $ref: '#/components/parameters/platform'
        - $ref: '#/components/parameters/appversion'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/new-post'
      responses:
        '200':
          description: success
  /post/v1/{id}:
    get:
      summary: get a post
      tags:
        - post
      security:
        - Bearer: []
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/platform'
        - $ref: '#/components/parameters/appversion'
      responses:
        '200':
          description: success
    put:
      summary: update post details
      tags:
        - post
      security:
        - Bearer: []
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/platform'
        - $ref: '#/components/parameters/appversion'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/update-post'
      responses:
        '200':
          description: success
    delete:
      summary: delete a post
      tags:
        - post
      security:
        - Bearer: []
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/platform'
        - $ref: '#/components/parameters/appversion'
      responses:
        '200':
          description: success
  /post/v1/{parentId}/like:
    put:
      summary: like action on parentId
      tags:
        - post
      security:
        - Bearer: []
      parameters:
        - $ref: '#/components/parameters/parentId'
        - $ref: '#/components/parameters/platform'
        - $ref: '#/components/parameters/appversion'
      responses:
        '200':
          description: api successful
    delete:
      summary: unlike action on parentId
      tags:
        - post
      security:
        - Bearer: []
      parameters:
        - $ref: '#/components/parameters/parentId'
        - $ref: '#/components/parameters/platform'
        - $ref: '#/components/parameters/appversion'
      responses:
        '200':
          description: api successful
  /post/v1/{parentId}/comment:
    post:
      summary: new comment action on parentId
      tags:
        - post
      security:
        - Bearer: []
      parameters:
        - $ref: '#/components/parameters/parentId'
        - $ref: '#/components/parameters/platform'
        - $ref: '#/components/parameters/appversion'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/comment'
      responses:
        '200':
          description: api successful
  /post/v1/{id}/comment:
    put:
      summary: edit comment action on id
      tags:
        - post
      security:
        - Bearer: []
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/platform'
        - $ref: '#/components/parameters/appversion'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/comment'
      responses:
        '200':
          description: api successful
    delete:
      summary: uncomment action on id
      tags:
        - post
      security:
        - Bearer: []
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/platform'
        - $ref: '#/components/parameters/appversion'
      responses:
        '200':
          description: api successful
  /post/v1/{parentId}/likes:
    get:
      summary: paginated list of likes for a parent
      tags:
        - post
      security:
        - Bearer: []
      parameters:
        - $ref: '#/components/parameters/parentId'
        - in: query
          name: page
          schema:
            type: number
        - in: query
          name: size
          schema:
            type: number
        - $ref: '#/components/parameters/platform'
        - $ref: '#/components/parameters/appversion'
      responses:
        '200':
          description: api successful
  /post/v1/{parentId}/comments:
    get:
      summary: paginated list of comments for a parent
      tags:
        - post
      security:
        - Bearer: []
      parameters:
        - $ref: '#/components/parameters/parentId'
        - in: query
          name: page
          schema:
            type: number
        - in: query
          name: size
          schema:
            type: number
        - $ref: '#/components/parameters/platform'
        - $ref: '#/components/parameters/appversion'
      responses:
        '200':
          description: api successful
  /vendor/v1/new:
    post:
      summary: creates one or more new vendors
      tags:
        - vendor
      security:
        - Bearer: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/new-vendor'
      parameters:
        - $ref: '#/components/parameters/platform'
        - $ref: '#/components/parameters/appversion'
      responses:
        '200':
          description: success
  /vendor/v1/{vendorId}:
    get:
      summary: get vendor by id
      tags:
        - vendor
      security:
        - Bearer: []
      parameters:
        - $ref: '#/components/parameters/vendorId'
        - $ref: '#/components/parameters/include'
        - $ref: '#/components/parameters/platform'
        - $ref: '#/components/parameters/appversion'
      responses:
        '200':
          description: success
    put:
      summary: updates vendor details
      tags:
        - vendor
      security:
        - Bearer: []
      parameters:
        - $ref: '#/components/parameters/vendorId'
        - $ref: '#/components/parameters/platform'
        - $ref: '#/components/parameters/appversion'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/update-vendor'
      responses:
        '200':
          description: success
    delete:
      summary: delete the vendor
      tags:
        - vendor
      security:
        - Bearer: []
      parameters:
        - $ref: '#/components/parameters/vendorId'
        - $ref: '#/components/parameters/include'
        - $ref: '#/components/parameters/platform'
        - $ref: '#/components/parameters/appversion'
      responses:
        '200':
          description: success
  /vendor/v1/list:
    get:
      summary: list joined vendors
      description: lists the vendors for which user has signed up for.
      tags:
        - vendor
      security:
        - Bearer: []
      parameters:
        - in: query
          name: include
          schema:
            type: string
        - $ref: '#/components/parameters/platform'
        - $ref: '#/components/parameters/appversion'
      responses:
        '200':
          description: success
  /vendor/v1/code/{code}:
    get:
      summary: get vendor by id
      tags:
        - vendor
      parameters:
        - in: path
          description: unique id of the vendor
          name: code
          schema:
            type: string
          required: true
        - $ref: '#/components/parameters/include'
        - $ref: '#/components/parameters/platform'
        - $ref: '#/components/parameters/appversion'
      responses:
        '200':
          description: success
  /vendor/v1/search:
    get:
      summary: search vendors api
      tags:
        - vendor
      parameters:
        - in: query
          name: name
          schema:
            type: string
        - in: query
          name: include
          schema:
            type: string
        - in: query
          name: category
          schema:
            type: string
        - in: query
          name: subCategory
          schema:
            type: string
        - in: query
          name: city
          schema:
            type: string
        - in: query
          name: state
          schema:
            type: string
        - in: query
          name: pincode
          schema:
            type: string
        - in: query
          name: country
          schema:
            type: string
        - in: query
          name: sublocality
          schema:
            type: string
        - $ref: '#/components/parameters/platform'
        - $ref: '#/components/parameters/appversion'
      responses:
        '200':
          description: success
  /vendor/v1/featured/list:
    get:
      summary: list joined vendors
      description: lists the vendors for which user has signed up for.
      tags:
        - vendor
      parameters:
        - in: query
          name: include
          schema:
            type: string
        - in: query
          name: city
          schema:
            type: string
        - $ref: '#/components/parameters/platform'
        - $ref: '#/components/parameters/appversion'
      responses:
        '200':
          description: success
  /vendor/v1/{vendorId}/assets:
    get:
      summary: list all vendor assets
      tags:
        - vendor
      security:
        - Bearer: []
      parameters:
        - $ref: '#/components/parameters/vendorId'
        - $ref: '#/components/parameters/platform'
        - $ref: '#/components/parameters/appversion'
      responses:
        '200':
          description: success
  /vendor/v1/{vendorId}/package/new:
    post:
      summary: create new vendor package
      tags:
        - vendor
      security:
        - Bearer: []
      parameters:
        - $ref: '#/components/parameters/vendorId'
        - $ref: '#/components/parameters/platform'
        - $ref: '#/components/parameters/appversion'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/default'
      responses:
        '200':
          description: success
  /vendor/v1/{vendorId}/package/list:
    get:
      summary: create new vendor package
      tags:
        - vendor
      security:
        - Bearer: []
      parameters:
        - $ref: '#/components/parameters/vendorId'
        - $ref: '#/components/parameters/platform'
        - $ref: '#/components/parameters/appversion'
      responses:
        '200':
          description: success
  /vendor/v1/{vendorId}/package/{packageId}:
    get:
      summary: update requested package
      tags:
        - vendor
      security:
        - Bearer: []
      parameters:
        - $ref: '#/components/parameters/vendorId'
        - $ref: '#/components/parameters/packageId'
        - $ref: '#/components/parameters/platform'
        - $ref: '#/components/parameters/appversion'
      responses:
        '200':
          description: success
    put:
      summary: update requested package
      tags:
        - vendor
      security:
        - Bearer: []
      parameters:
        - $ref: '#/components/parameters/vendorId'
        - $ref: '#/components/parameters/packageId'
        - $ref: '#/components/parameters/platform'
        - $ref: '#/components/parameters/appversion'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/default'
      responses:
        '200':
          description: success
    delete:
      summary: update requested package
      tags:
        - vendor
      security:
        - Bearer: []
      parameters:
        - $ref: '#/components/parameters/vendorId'
        - $ref: '#/components/parameters/packageId'
        - $ref: '#/components/parameters/platform'
        - $ref: '#/components/parameters/appversion'
      responses:
        '200':
          description: success
  /vendor/v1/{vendorId}/locations:
    get:
      summary: list all vendor locations
      tags:
        - vendor
      security:
        - Bearer: []
      parameters:
        - $ref: '#/components/parameters/vendorId'
        - $ref: '#/components/parameters/platform'
        - $ref: '#/components/parameters/appversion'
      responses:
        '200':
          description: success
  /vendor/v1/{vendorId}/submit:
    put:
      summary: submit vendor details for review
      tags:
        - vendor
      security:
        - Bearer: []
      parameters:
        - $ref: '#/components/parameters/vendorId'
        - $ref: '#/components/parameters/platform'
        - $ref: '#/components/parameters/appversion'
      responses:
        '200':
          description: success
    delete:
      summary: withdraw vendor review submit request
      tags:
        - vendor
      security:
        - Bearer: []
      parameters:
        - $ref: '#/components/parameters/vendorId'
        - $ref: '#/components/parameters/platform'
        - $ref: '#/components/parameters/appversion'
      responses:
        '200':
          description: success
  /location/v1/decode:
    get:
      summary: decode coordinates
      tags:
        - location
      parameters:
        - in: query
          name: lat
          required: true
          schema:
            type: string
        - in: query
          name: lon
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/platform'
        - $ref: '#/components/parameters/appversion'
      responses:
        '200':
          description: api successful
  /location/v1/new:
    post:
      summary: add new location
      tags:
        - location
      security:
        - Bearer: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/default'
      parameters:
        - $ref: '#/components/parameters/vendorId'
        - $ref: '#/components/parameters/platform'
        - $ref: '#/components/parameters/appversion'
      responses:
        '200':
          description: success
  /location/v1/{locationId}:
    get:
      summary: get location by id
      tags:
        - location
      security:
        - Bearer: []
      parameters:
        - $ref: '#/components/parameters/vendorId'
        - $ref: '#/components/parameters/locationId'
        - $ref: '#/components/parameters/platform'
        - $ref: '#/components/parameters/appversion'
      responses:
        '200':
          description: success
    put:
      summary: update location by id
      tags:
        - location
      security:
        - Bearer: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/default'
      parameters:
        - $ref: '#/components/parameters/vendorId'
        - $ref: '#/components/parameters/locationId'
        - $ref: '#/components/parameters/platform'
        - $ref: '#/components/parameters/appversion'
      responses:
        '200':
          description: success
    delete:
      summary: delete location by id
      tags:
        - location
      security:
        - Bearer: []
      parameters:
        - $ref: '#/components/parameters/vendorId'
        - $ref: '#/components/parameters/locationId'
        - $ref: '#/components/parameters/platform'
        - $ref: '#/components/parameters/appversion'
      responses:
        '200':
          description: success
  /notification/v1/channels:
    get:
      summary: get users & vendors notification channels
      tags:
        - notification
      security:
        - Bearer: []
      parameters:
        - $ref: '#/components/parameters/app'
        - $ref: '#/components/parameters/platform'
        - $ref: '#/components/parameters/appversion'
      responses:
        '200':
          description: success
  /gifting/v1/wishlist/recommendations:
    get:
      summary: Get recommendations for the user's wishlist based on the occasion
      tags:
        - gifting
      security:
        - Bearer: []
      parameters:
        - $ref: '#/components/parameters/occasion'
        - $ref: '#/components/parameters/platform'
        - $ref: '#/components/parameters/appversion'
      responses:
        '200':
          description: success
  /gifting/v1/wishlist/new:
    post:
      summary: Create a new wishlist
      tags:
        - gifting
      security:
        - Bearer: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/new-wishlist'
      parameters:
        - $ref: '#/components/parameters/platform'
        - $ref: '#/components/parameters/appversion'
      responses:
        '200':
          description: Wishlist successfully created
  /gifting/v1/wishlist/{wishlistId}:
    get:
      summary: get wishlist by id
      tags:
        - gifting
      security:
        - Bearer: []
      parameters:
        - $ref: '#/components/parameters/wishlistId'
        - $ref: '#/components/parameters/platform'
        - $ref: '#/components/parameters/appversion'
      responses:
        '200':
          description: success
    patch:
      summary: update wishlist by id
      tags:
        - gifting
      security:
        - Bearer: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/update-wishlist'
      parameters:
        - $ref: '#/components/parameters/wishlistId'
        - $ref: '#/components/parameters/platform'
        - $ref: '#/components/parameters/appversion'
      responses:
        '200':
          description: success
    delete:
      summary: delete wishlist by id
      tags:
        - gifting
      security:
        - Bearer: []
      parameters:
        - $ref: '#/components/parameters/wishlistId'
        - $ref: '#/components/parameters/platform'
        - $ref: '#/components/parameters/appversion'
      responses:
        '200':
          description: success
  /gifting/v1/wishlist/list:
    get:
      summary: Get wishlist based on parentId
      tags:
        - gifting
      security:
        - Bearer: []
      parameters:
        - $ref: '#/components/parameters/parentId'
        - $ref: '#/components/parameters/platform'
        - $ref: '#/components/parameters/appversion'
      responses:
        '200':
          description: success
  /occasion/v1/list:
    get:
      summary: list joined occasions
      description: lists the occasions for which user has signed up for.
      tags:
        - occasion
      security:
        - Bearer: []
      parameters:
        - in: query
          name: type
          required: true
          schema:
            type: string
            enum:
              - events
              - users
              - occasions
              - assets
        - $ref: '#/components/parameters/platform'
        - $ref: '#/components/parameters/appversion'
      responses:
        '200':
          description: success
  /occasion/v1/new:
    post:
      summary: creates a new occasion
      description: >-
        User should provide basic details such as name & description. Also
        supports optional fields such as from & till dates/datetimes.
      tags:
        - occasion
      security:
        - Bearer: []
      parameters:
        - $ref: '#/components/parameters/platform'
        - $ref: '#/components/parameters/appversion'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/new-occasion'
      responses:
        '200':
          description: success
  /occasion/v1/{occasionId}:
    get:
      summary: get occasion by id
      description: User can provide additional supported occasion fields.
      tags:
        - occasion
      security:
        - Bearer: []
      parameters:
        - $ref: '#/components/parameters/occasionId'
        - $ref: '#/components/parameters/include'
        - $ref: '#/components/parameters/platform'
        - $ref: '#/components/parameters/appversion'
      responses:
        '200':
          description: success
    put:
      summary: updates occasion data
      description: User can provide additional supported occasion fields.
      tags:
        - occasion
      security:
        - Bearer: []
      parameters:
        - $ref: '#/components/parameters/occasionId'
        - $ref: '#/components/parameters/platform'
        - $ref: '#/components/parameters/appversion'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/update-occasion'
      responses:
        '200':
          description: success  
    delete:
      summary: delete the occasion event
      tags:
        - occasion
      security:
        - Bearer: []
      parameters:
        - $ref: '#/components/parameters/occasionId'
        - $ref: '#/components/parameters/platform'
        - $ref: '#/components/parameters/appversion'
      responses:
        '200':
          description: success
  /occasion/v1/{occasionId}/join:
    put:
      summary: users will request to join the event using this
      tags:
        - occasion
      security:
        - Bearer: []
      parameters:
        - in: query
          name: side
          required: false
          schema:
            type: string
            enum:
              - B
              - G
        - $ref: '#/components/parameters/occasionId'
        - $ref: '#/components/parameters/platform'
        - $ref: '#/components/parameters/appversion'
      responses:
        '200':
          description: success
  /occasion/v1/{occasionId}/assets:
    get:
      summary: get images of the occasion
      tags:
        - occasion
      security:
        - Bearer: []
      parameters:
        - $ref: '#/components/parameters/occasionId'
        - $ref: '#/components/parameters/platform'
        - $ref: '#/components/parameters/appversion'
      responses:
        '200':
          description: success
  /occasion/v1/{occasionId}/users:
    get:
      summary: get users of the occasion
      description: >-
        Returns the list of users who are in verified, unverified, rejected
        states along with their sides. The requested user should be in verified
        state in the occasion.
      tags:
        - occasion
      security:
        - Bearer: []
      parameters:
        - $ref: '#/components/parameters/occasionId'
        - $ref: '#/components/parameters/platform'
        - $ref: '#/components/parameters/appversion'
      responses:
        '200':
          description: success
  /occasion/v1/{occasionId}/event/new:
    post:
      summary: creates a new event of the occasion
      description: >-
        User should provide basic details such as name & description. Also
        supports optional fields such as from & till dates/datetimes.
      tags:
        - occasion
      security:
        - Bearer: []
      parameters:
        - $ref: '#/components/parameters/occasionId'
        - $ref: '#/components/parameters/platform'
        - $ref: '#/components/parameters/appversion'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/occasion-event'
      responses:
        '200':
          description: success
  /occasion/v1/{occasionId}/event/list:
    get:
      summary: get events of the occasion
      tags:
        - occasion
      security:
        - Bearer: []
      parameters:
        - $ref: '#/components/parameters/occasionId'
        - $ref: '#/components/parameters/include'
        - $ref: '#/components/parameters/platform'
        - $ref: '#/components/parameters/appversion'
      responses:
        '200':
          description: success
  /occasion/v1/{occasionId}/event/{eventId}:
    put:
      summary: update the occasion event details
      tags:
        - occasion
      security:
        - Bearer: []
      parameters:
        - $ref: '#/components/parameters/occasionId'
        - $ref: '#/components/parameters/eventId'
        - $ref: '#/components/parameters/platform'
        - $ref: '#/components/parameters/appversion'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/occasion-event'
      responses:
        '200':
          description: success
    delete:
      summary: delete the occasion event
      tags:
        - occasion
      security:
        - Bearer: []
      parameters:
        - $ref: '#/components/parameters/occasionId'
        - $ref: '#/components/parameters/eventId'
        - $ref: '#/components/parameters/platform'
        - $ref: '#/components/parameters/appversion'
      responses:
        '200':
          description: success
    get:
      summary: get the occasion event
      tags:
        - occasion
      security:
        - Bearer: []
      parameters:
        - $ref: '#/components/parameters/occasionId'
        - $ref: '#/components/parameters/eventId'
        - $ref: '#/components/parameters/include'
        - $ref: '#/components/parameters/platform'
        - $ref: '#/components/parameters/appversion'
      responses:
        '200':
          description: success
  /occasion/v1/{occasionId}/event/{eventId}/assets:
    get:
      summary: get assets of the occasion event
      tags:
        - occasion
      security:
        - Bearer: []
      parameters:
        - $ref: '#/components/parameters/occasionId'
        - $ref: '#/components/parameters/eventId'
        - $ref: '#/components/parameters/platform'
        - $ref: '#/components/parameters/appversion'
      responses:
        '200':
          description: success
  /occasion/v1/rsvp/{parentId}:
    get:
      summary: Get the RSVP for the authenticated user on the specified occasion
      tags:
        - occasion
      security:
        - Bearer: []
      parameters:
        - $ref: '#/components/parameters/parentId'
        - $ref: '#/components/parameters/platform'
        - $ref: '#/components/parameters/appversion'
      responses:
        '200':
          description: success
    put:
      summary: Create or update the RSVP for the authenticated user on the specified occasion
      tags:
        - occasion
      security:
        - Bearer: []
      parameters:
        - $ref: '#/components/parameters/parentId'
        - $ref: '#/components/parameters/status'
        - $ref: '#/components/parameters/platform'
        - $ref: '#/components/parameters/appversion'
      responses:
        '200':
          description: success
    delete:
      summary: Delete the RSVP for user on the specified occasion
      tags:
        - occasion
      security:
        - Bearer: []
      parameters:
        - $ref: '#/components/parameters/parentId'
        - $ref: '#/components/parameters/platform'
        - $ref: '#/components/parameters/appversion'
      responses:
        '200':
          description: success
  /occasion/v1/rsvp/{parentId}/list:
    get:
      summary: Get the list of all RSVPs for the specified occasion
      tags:
        - occasion
      security:
        - Bearer: []
      parameters:
        - $ref: '#/components/parameters/parentId'
        - $ref: '#/components/parameters/platform'
        - $ref: '#/components/parameters/appversion'
      responses:
        '200':
          description: success
